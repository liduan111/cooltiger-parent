<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kyj.cooltiger.oauth.dao.TokenDao">

    <resultMap type="com.kyj.cooltiger.oauth.entity.Tokenpo" id="tbTokenMap">
        <result property="userId" column="user_id"/>
        <result property="token" column="token"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <select id="queryObject" resultType="com.kyj.cooltiger.oauth.entity.Tokenpo">
        select
            user_id,
            token,
            expire_time,
            create_time
        from ky_user_token
        where user_id = #{id}
    </select>

    <select id="queryByToken" resultType="com.kyj.cooltiger.oauth.entity.Tokenpo">
        select
            user_id,
            token,
            expire_time,
            create_time
        from ky_user_token
        where token = #{token}
    </select>

    <select id="queryByUserId" resultType="com.kyj.cooltiger.oauth.entity.Tokenpo">
        select
            user_id,
            token,
            expire_time,
            create_time
        from ky_user_token
        where user_id = #{userId}
    </select>

    <select id="queryList" resultType="com.kyj.cooltiger.oauth.entity.Tokenpo">
        select
        user_id,
        token,
        expire_time,
        create_time
        from ky_user_token
        WHERE 1=1
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by user_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from ky_user_token
        WHERE 1=1
    </select>

    <insert id="save" parameterType="com.kyj.cooltiger.oauth.entity.Tokenpo">
        insert into ky_user_token(
            `user_id`,
            `token`,
            `expire_time`,
            `create_time`)
        values(
                  #{userId},
                  #{token},
                  #{expireTime},
                  #{createTime})
    </insert>

    <update id="update" parameterType="com.kyj.cooltiger.oauth.entity.Tokenpo">
        update ky_user_token
        <set>
            <if test="token != null">`token` = #{token},</if>
            <if test="expireTime != null">`expire_time` = #{expireTime},</if>
            <if test="createTime != null">`update_time` = #{createTime}</if>
        </set>
        where user_id = #{userId}
    </update>

    <delete id="delete">
        delete from ky_user_token where user_id = #{value}
    </delete>

    <delete id="deleteBatch">
        delete from ky_user_token where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>